provider "aws" {
  region     = "us-east-2"
  access_key = "xxxxxxxxxxx"
  secret_key = "xxxxxxxxxxx"
}

## vpc
resource "aws_vpc" "main" {
  cidr_block       = "10.0.0.0/16"
  instance_tenancy = "default"

  tags = {
    Name = "demovpc"
  }
}

### subnet
resource "aws_subnet" "main" {
  vpc_id     = aws_vpc.main.id
  cidr_block = "10.0.1.0/24"

  tags = {
    Name = "demo-sub"
  }
}

### internet gateway
resource "aws_internet_gateway" "gw" {
  vpc_id = aws_vpc.main.id

  tags = {
    Name = "demo-igw"
  }
}


#### route table
resource "aws_route_table" "rt" {
  vpc_id = aws_vpc.main.id

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.gw.id
  }

  route {
    ipv6_cidr_block        = "::/0"
    gateway_id = aws_internet_gateway.gw.id
  }
 tags = {
    Name = "demo-rt"
  }
}

###subnet association
resource "aws_route_table_association" "a" {
  subnet_id      = aws_subnet.main.id
  route_table_id = aws_route_table.rt.id
}

#### security group
resource "aws_security_group" "sg" {
  name        = "demo_vpc_security"
  description = "Allow TLS inbound traffic"
  vpc_id      = aws_vpc.main.id

  ingress {
    description      = "http"
    from_port        = 80
    to_port          = 80
    protocol         = "tcp"
    cidr_blocks      = ["0.0.0.0/0"]
  }

  egress {
    from_port        = 0
    to_port          = 0
    protocol         = "-1"
    cidr_blocks      = ["0.0.0.0/0"]
    ipv6_cidr_blocks = ["::/0"]
  }

  tags = {
    Name = "demovpc-sg"
  }
}

### instance 
resource "aws_instance" "main" {
ami = "ami-0c6a6b0e75b2b6ce7"
instance_type = "t2.micro"
key_name = "manoj"
vpc_security_group_ids = [aws_security_group.sg.id]
subnet_id = aws_subnet.main.id

tags = {
Name = "test"
}
}


